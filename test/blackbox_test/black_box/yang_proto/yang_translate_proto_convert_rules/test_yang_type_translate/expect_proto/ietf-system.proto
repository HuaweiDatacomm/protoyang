syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-19 15:48:58
// ProtoYang-version 1
// module ietf-system
// revision 2014-08-06
// namespace urn:ietf:params:xml:ns:yang:ietf-system

package ietf_system;

message System {
   string contact = 1 [json_name = "contact"];
   string hostname = 2 [json_name = "hostname"];
   string location = 3 [json_name = "location"];
   message Clock {
      message Timezone_TimezoneName {
         string timezone_name = 1 [json_name = "timezone-name"];
      }
      message Timezone_TimezoneUtcOffset {
         int32 timezone_utc_offset = 1 [json_name = "timezone-utc-offset"];
      }
      oneof Timezone {
         Timezone_TimezoneName timezone_timezone_name = 1 [json_name = "timezone-name"];
         Timezone_TimezoneUtcOffset timezone_timezone_utc_offset = 2 [json_name = "timezone-utc-offset"];
      }
   }
   Clock clock = 4 [json_name = "clock"];
   message Ntp {
      bool enabled = 1 [json_name = "enabled"];
      message Server {
         string name = 1 [json_name = "name"];
         message Transport_Udp {
            message Udp5 {
               string address = 1 [json_name = "address"];
               uint32 port = 2 [json_name = "port"];
            }
            Udp5 udp5 = 1 [json_name = "udp"];
         }
         oneof Transport {
            Transport_Udp transport_udp = 2 [json_name = "udp"];
         }
         enum AssociationType {
            AssociationType_SERVER = 0;
            AssociationType_PEER = 1;
            AssociationType_POOL = 2;
         };
         AssociationType association_type = 3 [json_name = "association-type"];
         bool iburst = 4 [json_name = "iburst"];
         bool prefer = 5 [json_name = "prefer"];
      }
      repeated Server server = 2 [json_name = "server"];
   }
   Ntp ntp = 5 [json_name = "ntp"];
   message DnsResolver {
      repeated string search = 1 [json_name = "search"];
      message Server {
         string name = 1 [json_name = "name"];
         message Transport_UdpAndTcp {
            message UdpAndTcp5 {
               string address = 1 [json_name = "address"];
               uint32 port = 2 [json_name = "port"];
            }
            UdpAndTcp5 udp_and_tcp = 1 [json_name = "udp-and-tcp"];
         }
         oneof Transport {
            Transport_UdpAndTcp transport_udp_and_tcp = 2 [json_name = "udp-and-tcp"];
         }
      }
      repeated Server server = 2 [json_name = "server"];
      message Options {
         uint32 timeout = 1 [json_name = "timeout"];
         uint32 attempts = 2 [json_name = "attempts"];
      }
      Options options = 3 [json_name = "options"];
   }
   DnsResolver dns_resolver = 6 [json_name = "dns-resolver"];
   message Radius {
      message Server {
         string name = 1 [json_name = "name"];
         message Transport_Udp {
            message Udp5 {
               string address = 1 [json_name = "address"];
               uint32 authentication_port = 2 [json_name = "authentication-port"];
               string shared_secret = 3 [json_name = "shared-secret"];
            }
            Udp5 udp5 = 1 [json_name = "udp"];
         }
         oneof Transport {
            Transport_Udp transport_udp = 2 [json_name = "udp"];
         }
         string authentication_type = 3 [json_name = "authentication-type"];
      }
      repeated Server server = 1 [json_name = "server"];
      message Options {
         uint32 timeout = 1 [json_name = "timeout"];
         uint32 attempts = 2 [json_name = "attempts"];
      }
      Options options = 2 [json_name = "options"];
   }
   Radius radius = 7 [json_name = "radius"];
   message Authentication {
      repeated string user_authentication_order = 1 [json_name = "user-authentication-order"];
      message User {
         string name = 1 [json_name = "name"];
         string password = 2 [json_name = "password"];
         message AuthorizedKey {
            string name = 1 [json_name = "name"];
            string algorithm = 2 [json_name = "algorithm"];
            bytes key_data = 3 [json_name = "key-data"];
         }
         repeated AuthorizedKey authorized_key = 3 [json_name = "authorized-key"];
      }
      repeated User user = 2 [json_name = "user"];
   }
   Authentication authentication = 8 [json_name = "authentication"];
}
message SystemState {
   message Platform {
      string os_name = 1 [json_name = "os-name"];
      string os_release = 2 [json_name = "os-release"];
      string os_version = 3 [json_name = "os-version"];
      string machine = 4 [json_name = "machine"];
   }
   Platform platform = 1 [json_name = "platform"];
   message Clock {
      string current_datetime = 1 [json_name = "current-datetime"];
      string boot_datetime = 2 [json_name = "boot-datetime"];
   }
   Clock clock = 2 [json_name = "clock"];
}

