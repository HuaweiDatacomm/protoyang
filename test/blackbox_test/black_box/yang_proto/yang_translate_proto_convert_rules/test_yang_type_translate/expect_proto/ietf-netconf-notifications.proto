syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-19 15:48:58
// ProtoYang-version 1
// module ietf-netconf-notifications
// revision 2012-02-06
// namespace urn:ietf:params:xml:ns:yang:ietf-netconf-notifications

package ietf_netconf_notifications;

message NetconfConfigChange {
   message ChangedBy {
      message ServerOrUser_Server {
         bool server4 = 1 [json_name = "server"];
      }
      message ServerOrUser_ByUser {
         string username = 1 [json_name = "username"];
         uint32 session_id = 2 [json_name = "session-id"];
         string source_host = 3 [json_name = "source-host"];
      }
      message ServerOrUser_Config {
         message Config4 {
         }
         Config4 config4 = 1 [json_name = "config"];
      }
      oneof ServerOrUser {
         ServerOrUser_Server server_or_user_server = 1 [json_name = "server"];
         ServerOrUser_ByUser server_or_user_by_user = 2 [json_name = "by-user"];
         ServerOrUser_Config server_or_user_config = 3 [json_name = "config"];
      }
   }
   ChangedBy changed_by = 1 [json_name = "changed-by"];
   enum Datastore {
      Datastore_RUNNING = 0;
      Datastore_STARTUP = 1;
   };
   Datastore datastore = 2 [json_name = "datastore"];
   message Edit {
      string target = 1 [json_name = "target"];
      enum Operation {
         Operation_MERGE = 0;
         Operation_REPLACE = 1;
         Operation_CREATE = 2;
         Operation_DELETE = 3;
         Operation_REMOVE = 4;
      };
      Operation operation = 2 [json_name = "operation"];
   }
   repeated Edit edit = 3 [json_name = "edit"];
}
message Decimal64 {
   int64 value = 1 [json_name = "value"];
   uint32 fraction_digits = 2 [json_name = "fraction-digits"];
}
message NetconfCapabilityChange {
   message ChangedBy {
      message ServerOrUser_Server {
         bool server4 = 1 [json_name = "server"];
      }
      message ServerOrUser_ByUser {
         string username = 1 [json_name = "username"];
         uint32 session_id = 2 [json_name = "session-id"];
         string source_host = 3 [json_name = "source-host"];
      }
      message ServerOrUser_Config {
         message Config4 {
         }
         Config4 config4 = 1 [json_name = "config"];
      }
      oneof ServerOrUser {
         ServerOrUser_Server server_or_user_server = 1 [json_name = "server"];
         ServerOrUser_ByUser server_or_user_by_user = 2 [json_name = "by-user"];
         ServerOrUser_Config server_or_user_config = 3 [json_name = "config"];
      }
   }
   ChangedBy changed_by = 1 [json_name = "changed-by"];
   repeated string added_capability = 2 [json_name = "added-capability"];
   repeated string deleted_capability = 3 [json_name = "deleted-capability"];
   repeated string modified_capability = 4 [json_name = "modified-capability"];
}
message NetconfSessionStart {
   string username = 1 [json_name = "username"];
   uint32 session_id = 2 [json_name = "session-id"];
   string source_host = 3 [json_name = "source-host"];
}
message NetconfSessionEnd {
   string username = 1 [json_name = "username"];
   uint32 session_id = 2 [json_name = "session-id"];
   string source_host = 3 [json_name = "source-host"];
   uint32 killed_by = 4 [json_name = "killed-by"];
   enum TerminationReason {
      TerminationReason_CLOSED = 0;
      TerminationReason_KILLED = 1;
      TerminationReason_DROPPED = 2;
      TerminationReason_TIMEOUT = 3;
      TerminationReason_BADX_HELLO = 4;
      TerminationReason_OTHER = 5;
   };
   TerminationReason termination_reason = 5 [json_name = "termination-reason"];
}
message NetconfConfirmedCommit {
   string username = 1 [json_name = "username"];
   uint32 session_id = 2 [json_name = "session-id"];
   string source_host = 3 [json_name = "source-host"];
   enum ConfirmEvent {
      ConfirmEvent_START = 0;
      ConfirmEvent_CANCEL = 1;
      ConfirmEvent_TIMEOUT = 2;
      ConfirmEvent_EXTEND = 3;
      ConfirmEvent_COMPLETE = 4;
   };
   ConfirmEvent confirm_event = 4 [json_name = "confirm-event"];
   uint32 timeout = 5 [json_name = "timeout"];
   uint32 timeout_a = 6 [json_name = "timeout_a"];
   uint32 timeout_b = 7 [json_name = "timeout_b"];
   uint64 timeout_c = 8 [json_name = "timeout_c"];
   int32 timeout_a_int = 9 [json_name = "timeout_a_int"];
   int32 timeout_b_int = 10 [json_name = "timeout_b_int"];
   int32 timeout_c_int = 11 [json_name = "timeout_c_int"];
   int64 timeout_d_int = 12 [json_name = "timeout_d_int"];
   bytes timeout_a_binary = 13 [json_name = "timeout_a_binary"];
   Decimal64 timeout_a_decimal = 14 [json_name = "timeout_a_decimal"];
   bool timeout_a_empty = 15 [json_name = "timeout_a_empty"];
}

