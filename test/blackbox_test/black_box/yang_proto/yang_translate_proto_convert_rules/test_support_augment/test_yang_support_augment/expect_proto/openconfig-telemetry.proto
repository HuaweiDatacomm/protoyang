syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2019-04-19 15:41:36
// ProtoYang-version 1
// module openconfig-telemetry
// revision 2017-08-24
// revision 2017-02-20
// revision 2016-04-05
// namespace http://openconfig.net/yang/telemetry

package openconfig_telemetry;

message TelemetrySystem {
   message SensorGroups {
      message SensorGroup {
         string sensor_group_id = 1 [json_name = "sensor-group-id"];
         message Config {
            string sensor_group_id = 1 [json_name = "sensor-group-id"];
         }
         Config config = 2 [json_name = "config"];
         message State {
            string sensor_group_id = 1 [json_name = "sensor-group-id"];
         }
         State state = 3 [json_name = "state"];
         message SensorPaths {
            message SensorPath {
               string path = 1 [json_name = "path"];
               message Config {
                  string path = 1 [json_name = "path"];
                  string exclude_filter = 2 [json_name = "exclude-filter"];
               }
               Config config = 2 [json_name = "config"];
               message State {
                  string path = 1 [json_name = "path"];
                  string exclude_filter = 2 [json_name = "exclude-filter"];
               }
               State state = 3 [json_name = "state"];
            }
            repeated SensorPath sensor_path = 1 [json_name = "sensor-path"];
         }
         SensorPaths sensor_paths = 4 [json_name = "sensor-paths"];
      }
      repeated SensorGroup sensor_group = 1 [json_name = "sensor-group"];
   }
   SensorGroups sensor_groups = 1 [json_name = "sensor-groups"];
   message DestinationGroups {
      message DestinationGroup {
         string group_id = 1 [json_name = "group-id"];
         message Config {
            string group_id = 1 [json_name = "group-id"];
         }
         Config config = 2 [json_name = "config"];
         message State {
            string group_id = 1 [json_name = "group-id"];
         }
         State state = 3 [json_name = "state"];
         message Destinations {
            message Destination {
               string destination_address = 1 [json_name = "destination-address"];
               uint32 destination_port = 2 [json_name = "destination-port"];
               message Config {
                  string destination_address = 1 [json_name = "destination-address"];
                  uint32 destination_port = 2 [json_name = "destination-port"];
               }
               Config config = 3 [json_name = "config"];
               message State {
                  string destination_address = 1 [json_name = "destination-address"];
                  uint32 destination_port = 2 [json_name = "destination-port"];
               }
               State state = 4 [json_name = "state"];
            }
            repeated Destination destination = 1 [json_name = "destination"];
         }
         Destinations destinations = 4 [json_name = "destinations"];
      }
      repeated DestinationGroup destination_group = 1 [json_name = "destination-group"];
   }
   DestinationGroups destination_groups = 2 [json_name = "destination-groups"];
   message Subscriptions {
      message Persistent {
         message Subscription {
            string subscription_name = 1 [json_name = "subscription-name"];
            message Config {
               string subscription_name = 1 [json_name = "subscription-name"];
               string local_source_address = 2 [json_name = "local-source-address"];
               uint32 originated_qos_marking = 3 [json_name = "originated-qos-marking"];
               string protocol = 4 [json_name = "protocol"];
               string encoding = 5 [json_name = "encoding"];
            }
            Config config = 2 [json_name = "config"];
            message State {
               string subscription_name = 1 [json_name = "subscription-name"];
               uint64 subscription_id = 2 [json_name = "subscription-id"];
               string local_source_address = 3 [json_name = "local-source-address"];
               uint32 originated_qos_marking = 4 [json_name = "originated-qos-marking"];
               string protocol = 5 [json_name = "protocol"];
               string encoding = 6 [json_name = "encoding"];
            }
            State state = 3 [json_name = "state"];
            message SensorProfiles {
               message SensorProfile {
                  string sensor_group = 1 [json_name = "sensor-group"];
                  message Config {
                     string sensor_group = 1 [json_name = "sensor-group"];
                     uint64 sample_interval = 2 [json_name = "sample-interval"];
                     uint64 heartbeat_interval = 3 [json_name = "heartbeat-interval"];
                     bool suppress_redundant = 4 [json_name = "suppress-redundant"];
                  }
                  Config config = 2 [json_name = "config"];
                  message State {
                     string sensor_group = 1 [json_name = "sensor-group"];
                     uint64 sample_interval = 2 [json_name = "sample-interval"];
                     uint64 heartbeat_interval = 3 [json_name = "heartbeat-interval"];
                     bool suppress_redundant = 4 [json_name = "suppress-redundant"];
                  }
                  State state = 3 [json_name = "state"];
               }
               repeated SensorProfile sensor_profile = 1 [json_name = "sensor-profile"];
            }
            SensorProfiles sensor_profiles = 4 [json_name = "sensor-profiles"];
            message DestinationGroups {
               message DestinationGroup {
                  string group_id = 1 [json_name = "group-id"];
                  message Config {
                     string group_id = 1 [json_name = "group-id"];
                  }
                  Config config = 2 [json_name = "config"];
                  message State {
                     string group_id = 1 [json_name = "group-id"];
                  }
                  State state = 3 [json_name = "state"];
               }
               repeated DestinationGroup destination_group = 1 [json_name = "destination-group"];
            }
            DestinationGroups destination_groups = 5 [json_name = "destination-groups"];
         }
         repeated Subscription subscription = 1 [json_name = "subscription"];
      }
      Persistent persistent = 1 [json_name = "persistent"];
      message Dynamic {
         message Subscription {
            uint64 subscription_id = 1 [json_name = "subscription-id"];
            message State {
               uint64 subscription_id = 1 [json_name = "subscription-id"];
               string destination_address = 2 [json_name = "destination-address"];
               uint32 destination_port = 3 [json_name = "destination-port"];
               uint64 sample_interval = 4 [json_name = "sample-interval"];
               uint64 heartbeat_interval = 5 [json_name = "heartbeat-interval"];
               bool suppress_redundant = 6 [json_name = "suppress-redundant"];
               uint32 originated_qos_marking = 7 [json_name = "originated-qos-marking"];
               string protocol = 8 [json_name = "protocol"];
               string encoding = 9 [json_name = "encoding"];
            }
            State state = 2 [json_name = "state"];
            message SensorPaths {
               message SensorPath {
                  string path = 1 [json_name = "path"];
                  message State {
                     string path = 1 [json_name = "path"];
                     string exclude_filter = 2 [json_name = "exclude-filter"];
                  }
                  State state = 2 [json_name = "state"];
               }
               repeated SensorPath sensor_path = 1 [json_name = "sensor-path"];
            }
            SensorPaths sensor_paths = 3 [json_name = "sensor-paths"];
         }
         repeated Subscription subscription = 1 [json_name = "subscription"];
      }
      Dynamic dynamic = 2 [json_name = "dynamic"];
   }
   Subscriptions subscriptions = 3 [json_name = "subscriptions"];
}

