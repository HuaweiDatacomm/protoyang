syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-31 10:22:16
// ProtoYang-version 1
// module huawei-network-instance
// revision 2020-03-10
// revision 2019-04-28
// namespace urn:huawei:yang:huawei-network-instance

package huawei_network_instance;

message NetworkInstance {
   message Global {
      string cfg_router_id = 1 [json_name = "cfg-router-id"];
      bool as_notation_plain = 2 [json_name = "as-notation-plain"];
      string route_distinguisher_auto_ip = 3 [json_name = "route-distinguisher-auto-ip"];
   }
   Global global = 1 [json_name = "global"];
   message Instances {
      message Instance {
         string name = 1 [json_name = "name"];
         string description = 2 [json_name = "description"];
         string sys_router_id = 3 [json_name = "sys-router-id"];
         uint32 vrf_id = 4 [json_name = "vrf-id"];
         bool traffic_statistic_enable = 5 [json_name = "traffic-statistic-enable"];
         message Parameter {
            string identifier = 1 [json_name = "identifier"];
         }
         Parameter parameter = 6 [json_name = "parameter"];
         message Afs {
            message Af {
               enum Type {
                  Type_INVALID_ENUM_VALUE = 1;
                  Type_IPV4X_UNICAST = 1;
                  Type_IPV6X_UNICAST = 5;
               };
               Type type = 1 [json_name = "type"];
               string route_distinguisher = 2 [json_name = "route-distinguisher"];
               string effect_route_distinguisher = 3 [json_name = "effect-route-distinguisher"];
               message ImportPolicyType_RtpRef {
                  string import_policy = 1 [json_name = "import-policy"];
               }
               message ImportPolicyType_XplRef {
                  message ImportFilter {
                     string name = 1 [json_name = "name"];
                     string parameter = 2 [json_name = "parameter"];
                  }
                  ImportFilter import_filter = 1 [json_name = "import-filter"];
               }
               oneof ImportPolicyType {
                  ImportPolicyType_RtpRef import_policy_type_rtp_ref = 4 [json_name = "rtp-ref"];
                  ImportPolicyType_XplRef import_policy_type_xpl_ref = 5 [json_name = "xpl-ref"];
               }
               message ExportPolicyType_RtpRef {
                  string export_policy = 1 [json_name = "export-policy"];
               }
               message ExportPolicyType_XplRef {
                  message ExportFilter {
                     string name = 1 [json_name = "name"];
                     string parameter = 2 [json_name = "parameter"];
                  }
                  ExportFilter export_filter = 1 [json_name = "export-filter"];
               }
               oneof ExportPolicyType {
                  ExportPolicyType_RtpRef export_policy_type_rtp_ref = 6 [json_name = "rtp-ref"];
                  ExportPolicyType_XplRef export_policy_type_xpl_ref = 7 [json_name = "xpl-ref"];
               }
               bool export_policy_add_ert_first = 8 [json_name = "export-policy-add-ert-first"];
               enum LabelMode {
                  LabelMode_PERX_ROUTE = 0;
                  LabelMode_PERX_INSTANCE = 1;
                  LabelMode_PERX_NEXTHOP = 2;
               };
               LabelMode label_mode = 9 [json_name = "label-mode"];
               uint32 static_label = 10 [json_name = "static-label"];
               bool vpn_frr = 11 [json_name = "vpn-frr"];
               string tunnel_policy = 12 [json_name = "tunnel-policy"];
               bool transit_vpn = 13 [json_name = "transit-vpn"];
               enum LspOperation {
                  LspOperation_POP = 0;
                  LspOperation_POPX_GO = 1;
               };
               LspOperation lsp_operation = 14 [json_name = "lsp-operation"];
               uint32 default_color = 15 [json_name = "default-color"];
               message VpnTargets {
                  message VpnTarget {
                     string value = 1 [json_name = "value"];
                     enum Type {
                        Type_INVALID_ENUM_VALUE = 2;
                        Type_EXPORTX_EXTCOMMUNITY = 2;
                        Type_IMPORTX_EXTCOMMUNITY = 3;
                     };
                     Type type = 2 [json_name = "type"];
                  }
                  repeated VpnTarget vpn_target = 1 [json_name = "vpn-target"];
               }
               VpnTargets vpn_targets = 16 [json_name = "vpn-targets"];
               message State {
                  string create_time = 1 [json_name = "create-time"];
                  uint32 up_time = 2 [json_name = "up-time"];
                  uint32 label = 3 [json_name = "label"];
                  enum Status {
                     Status_INVALID_ENUM_VALUE = 1;
                     Status_UP = 1;
                     Status_DOWN = 2;
                  };
                  Status status = 4 [json_name = "status"];
               }
               State state = 17 [json_name = "state"];
               message TunnelInfos {
                  message TunnelInfo {
                     enum Type {
                        Type_INVALID = 0;
                        Type_LDP = 1;
                        Type_BGP = 2;
                        Type_TE = 3;
                        Type_STATICX_LSP = 4;
                        Type_GRE = 5;
                        Type_UNI = 6;
                        Type_TNLX_GROUP = 7;
                        Type_SUBX_TE = 8;
                        Type_SUBX_GROUP = 9;
                        Type_X_6OVER4 = 10;
                        Type_X_6TO4 = 11;
                        Type_MPLSX_LOCALX_IFNET = 12;
                        Type_LDP6 = 13;
                        Type_NVGRE = 15;
                        Type_P2MPX_LDP = 16;
                        Type_VXLAN = 23;
                        Type_IPSEC = 24;
                        Type_P2MPX_TE = 32;
                        Type_VXLANX_NVO3 = 39;
                        Type_GRE6 = 40;
                        Type_SRBEX_LSP = 41;
                        Type_VXLAN6X_NVO3 = 42;
                        Type_SRV6 = 43;
                        Type_X_4OVER6 = 44;
                        Type_X_6RD = 45;
                        Type_SRX_TE = 47;
                        Type_SRX_TEX_POLICY = 50;
                        Type_SRX_TEX_POLICYX_GROUP = 51;
                        Type_SRV6X_TEX_POLICY = 52;
                        Type_SRV6X_TEX_POLICYX_GROUP = 55;
                        Type_SDX_WAN = 56;
                        Type_P2MPX_GRE = 64;
                        Type_FLEXX_ALGOX_LSP = 147;
                        Type_LDPX_LSP = 255;
                     };
                     Type type = 1 [json_name = "type"];
                     string peer_ip = 2 [json_name = "peer-ip"];
                     uint32 id = 3 [json_name = "id"];
                     uint32 color = 4 [json_name = "color"];
                     string name = 5 [json_name = "name"];
                  }
                  repeated TunnelInfo tunnel_info = 1 [json_name = "tunnel-info"];
               }
               TunnelInfos tunnel_infos = 18 [json_name = "tunnel-infos"];
            }
            repeated Af af = 1 [json_name = "af"];
         }
         Afs afs = 7 [json_name = "afs"];
      }
      repeated Instance instance = 1 [json_name = "instance"];
   }
   Instances instances = 2 [json_name = "instances"];
}

