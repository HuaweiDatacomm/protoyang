syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-31 10:22:16
// ProtoYang-version 1
// module huawei-devm
// revision 2020-08-07
// revision 2020-06-04
// revision 2020-05-07
// revision 2020-04-10
// revision 2020-03-17
// revision 2020-03-11
// revision 2020-02-29
// revision 2020-02-14
// revision 2019-09-09
// revision 2019-04-05
// namespace urn:huawei:yang:huawei-devm

package huawei_devm;

message Devm {
   message PhysicalEntitys {
      message PhysicalEntity {
         enum Class {
            Class_OTHER = 0;
            Class_CHASSIS = 1;
            Class_MPUMODULE = 4;
            Class_LPUMODULE = 5;
            Class_SFUMODULE = 6;
            Class_CLOCKMODULE = 7;
            Class_CARDMODULE = 9;
            Class_PORT = 10;
            Class_FAN = 16;
            Class_POWERSUPPLY = 17;
            Class_CONTAINER = 18;
            Class_PPMODULE = 4108;
            Class_SWFMODULE = 4109;
            Class_ECUMODULE = 4110;
            Class_ICUMODULE = 4111;
            Class_VLTPT = 4127;
            Class_TMPPT = 4128;
            Class_LFE = 4162;
            Class_CFMODULE = 4170;
            Class_LCD = 4181;
            Class_PEM = 5006;
            Class_CMUMODULE = 5010;
            Class_PIC = 5011;
            Class_TSU = 5012;
            Class_PMU = 5031;
            Class_PM = 5032;
         };
         Class class = 1 [json_name = "class"];
         string position = 2 [json_name = "position"];
         string serial_number = 3 [json_name = "serial-number"];
         uint32 index = 4 [json_name = "index"];
         uint32 chassis_index = 5 [json_name = "chassis-index"];
         uint32 board_index = 6 [json_name = "board-index"];
         string name = 7 [json_name = "name"];
         string entity_description = 8 [json_name = "entity-description"];
         string alias = 9 [json_name = "alias"];
         string vendor_type = 10 [json_name = "vendor-type"];
         uint32 contained_index = 11 [json_name = "contained-index"];
         uint32 parent_relative_position = 12 [json_name = "parent-relative-position"];
         string hardware_version = 13 [json_name = "hardware-version"];
         string firmware_version = 14 [json_name = "firmware-version"];
         string software_version = 15 [json_name = "software-version"];
         string module_name = 16 [json_name = "module-name"];
         bool is_fru = 17 [json_name = "is-fru"];
         enum AdminState {
            AdminState_INACTIVE = 0;
            AdminState_ACTIVE = 1;
            AdminState_NOTSUPPORTED = 2;
         };
         AdminState admin_state = 18 [json_name = "admin-state"];
         enum RunningState {
            RunningState_UNKNOWN = 0;
            RunningState_NORMAL = 1;
            RunningState_FAULT = 2;
            RunningState_OFFLINE = 3;
            RunningState_NOTSUPPORTED = 4;
            RunningState_OPTICALNOTEQUIPPED = 5;
            RunningState_NOTINSTALL = 6;
            RunningState_WRONGTYPE = 7;
            RunningState_REGISTERED = 8;
            RunningState_UNREGISTERED = 9;
            RunningState_POWEROFF = 10;
            RunningState_PORTX_PHYSICALX_DOWN = 11;
         };
         RunningState running_state = 19 [json_name = "running-state"];
         enum StandbyState {
            StandbyState_MASTER = 0;
            StandbyState_SLAVE = 1;
            StandbyState_NOTSUPPORTED = 2;
            StandbyState_SYSTEMMASTER = 3;
            StandbyState_SYSTEMSLAVE = 4;
         };
         StandbyState standby_state = 20 [json_name = "standby-state"];
         string system_oid = 21 [json_name = "system-oid"];
         string ls_name = 22 [json_name = "ls-name"];
      }
      repeated PhysicalEntity physical_entity = 1 [json_name = "physical-entity"];
   }
   PhysicalEntitys physical_entitys = 1 [json_name = "physical-entitys"];
   message Chassiss {
      message Chassis {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string type = 3 [json_name = "type"];
         string service_type = 4 [json_name = "service-type"];
         uint32 slot_num = 5 [json_name = "slot-num"];
         uint32 board_num = 6 [json_name = "board-num"];
         uint32 fan_num = 7 [json_name = "fan-num"];
         uint32 power_num = 8 [json_name = "power-num"];
         uint32 up_time = 9 [json_name = "up-time"];
         uint32 status_last_change = 10 [json_name = "status-last-change"];
         uint32 entity_last_change = 11 [json_name = "entity-last-change"];
         uint32 dust_clean_cycle = 12 [json_name = "dust-clean-cycle"];
         string last_clean_date = 13 [json_name = "last-clean-date"];
         uint32 up_to_last_clean = 14 [json_name = "up-to-last-clean"];
         uint32 alarm_exist_days = 15 [json_name = "alarm-exist-days"];
         message MonitorBoardChanges {
            message MonitorBoardChange {
               uint32 board_index = 1 [json_name = "board-index"];
               uint32 status_last_change = 2 [json_name = "status-last-change"];
               uint32 entity_last_change = 3 [json_name = "entity-last-change"];
            }
            repeated MonitorBoardChange monitor_board_change = 1 [json_name = "monitor-board-change"];
         }
         MonitorBoardChanges monitor_board_changes = 16 [json_name = "monitor-board-changes"];
      }
      repeated Chassis chassis = 1 [json_name = "chassis"];
   }
   Chassiss chassiss = 2 [json_name = "chassiss"];
   message Containers {
      message Container {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string type = 3 [json_name = "type"];
         string equiped_entity_type = 4 [json_name = "equiped-entity-type"];
      }
      repeated Container container = 1 [json_name = "container"];
   }
   Containers containers = 3 [json_name = "containers"];
   message MpuBoards {
      message MpuBoard {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string board_type = 3 [json_name = "board-type"];
         uint32 up_time = 4 [json_name = "up-time"];
         uint32 sdram_size = 5 [json_name = "sdram-size"];
         uint32 nvram_size = 6 [json_name = "nvram-size"];
         uint32 flash_size = 7 [json_name = "flash-size"];
         enum LsRole {
            LsRole_UNKNOWN = 0;
            LsRole_MMB = 1;
            LsRole_PLMB = 2;
            LsRole_ACMB = 3;
            LsRole_MB = 4;
            LsRole_LC = 5;
            LsRole_SYSMMB = 6;
            LsRole_SYSMB = 7;
         };
         LsRole ls_role = 8 [json_name = "ls-role"];
         string last_reset_time = 9 [json_name = "last-reset-time"];
         string last_reset_reason = 10 [json_name = "last-reset-reason"];
         string register_time = 11 [json_name = "register-time"];
         bool is_register = 12 [json_name = "is-register"];
         uint32 cfcard_size = 13 [json_name = "cfcard-size"];
         uint32 cfcard2_size = 14 [json_name = "cfcard2-size"];
      }
      repeated MpuBoard mpu_board = 1 [json_name = "mpu-board"];
   }
   MpuBoards mpu_boards = 4 [json_name = "mpu-boards"];
   message LpuBoards {
      message LpuBoard {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string board_type = 3 [json_name = "board-type"];
         uint32 sdram_size = 4 [json_name = "sdram-size"];
         uint32 flash_size = 5 [json_name = "flash-size"];
         uint32 up_time = 6 [json_name = "up-time"];
         uint32 np_rdram_size = 7 [json_name = "np-rdram-size"];
         uint32 np_sram_size = 8 [json_name = "np-sram-size"];
         enum ServiceType {
            ServiceType_LPU = 0;
            ServiceType_RNR = 1;
            ServiceType_TSU = 2;
            ServiceType_NS = 3;
            ServiceType_GRE = 4;
            ServiceType_VSU = 5;
         };
         ServiceType service_type = 9 [json_name = "service-type"];
         enum NextServiceType {
            NextServiceType_LPU = 0;
            NextServiceType_RNR = 1;
            NextServiceType_TSU = 2;
            NextServiceType_NS = 3;
            NextServiceType_GRE = 4;
            NextServiceType_VSU = 5;
         };
         NextServiceType next_service_type = 10 [json_name = "next-service-type"];
         uint32 pic_num = 11 [json_name = "pic-num"];
         uint32 sub_slot_num = 12 [json_name = "sub-slot-num"];
         uint32 current_l3_clk = 13 [json_name = "current-l3-clk"];
         string register_time = 14 [json_name = "register-time"];
         bool is_register = 15 [json_name = "is-register"];
      }
      repeated LpuBoard lpu_board = 1 [json_name = "lpu-board"];
   }
   LpuBoards lpu_boards = 5 [json_name = "lpu-boards"];
   message SfuBoards {
      message SfuBoard {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string board_type = 3 [json_name = "board-type"];
         uint32 sdram_size = 4 [json_name = "sdram-size"];
         uint32 flash_size = 5 [json_name = "flash-size"];
         uint32 up_time = 6 [json_name = "up-time"];
         string register_time = 7 [json_name = "register-time"];
         bool is_register = 8 [json_name = "is-register"];
      }
      repeated SfuBoard sfu_board = 1 [json_name = "sfu-board"];
   }
   SfuBoards sfu_boards = 6 [json_name = "sfu-boards"];
   message Cards {
      message Card {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         string type = 3 [json_name = "type"];
         string hard_type = 4 [json_name = "hard-type"];
         uint32 port_num = 5 [json_name = "port-num"];
         enum InitStatus {
            InitStatus_FAIL = 0;
            InitStatus_SUCCESS = 1;
            InitStatus_UNKNOWN = 2;
         };
         InitStatus init_status = 6 [json_name = "init-status"];
         enum RegisterStatus {
            RegisterStatus_UNREGISTERED = 0;
            RegisterStatus_REGISTERED = 1;
            RegisterStatus_UNKNOWN = 2;
         };
         RegisterStatus register_status = 7 [json_name = "register-status"];
         message Pic {
            enum LogicStatus {
               LogicStatus_FAIL = 0;
               LogicStatus_SUCCESS = 1;
               LogicStatus_UNKNOWN = 2;
            };
            LogicStatus logic_status = 1 [json_name = "logic-status"];
            string up_time = 2 [json_name = "up-time"];
         }
         Pic pic = 8 [json_name = "pic"];
      }
      repeated Card card = 1 [json_name = "card"];
   }
   Cards cards = 7 [json_name = "cards"];
   message CfCards {
      message CfCard {
         string position = 1 [json_name = "position"];
         string serial_number = 2 [json_name = "serial-number"];
         uint32 index = 3 [json_name = "index"];
         string card_type = 4 [json_name = "card-type"];
         uint32 memory_size = 5 [json_name = "memory-size"];
         uint32 memory_used = 6 [json_name = "memory-used"];
         uint32 memory_free = 7 [json_name = "memory-free"];
      }
      repeated CfCard cf_card = 1 [json_name = "cf-card"];
   }
   CfCards cf_cards = 8 [json_name = "cf-cards"];
   message Ports {
      message Port {
         string position = 1 [json_name = "position"];
         uint32 index = 2 [json_name = "index"];
         enum AdminState {
            AdminState_INACTIVE = 0;
            AdminState_ACTIVE = 1;
            AdminState_NOTSUPPORTED = 2;
         };
         AdminState admin_state = 3 [json_name = "admin-state"];
         enum Type {
            Type_UNKNOWN = 0;
            Type_ETH = 1;
            Type_POS = 2;
            Type_CPOS = 3;
            Type_E1 = 4;
            Type_GE = 5;
            Type_X_10GE = 6;
            Type_GF = 7;
            Type_X_10GF = 8;
            Type_X_40GF = 9;
            Type_X_10GFCOM = 10;
            Type_X_40GFSPLIT = 11;
            Type_OTN = 12;
            Type_FE = 13;
            Type_FLEXE = 14;
            Type_VSR = 15;
         };
         Type type = 4 [json_name = "type"];
         string hard_type = 5 [json_name = "hard-type"];
         enum LoopbackMode {
            LoopbackMode_NOLOOPBACK = 0;
            LoopbackMode_LOCALLOOPBACK = 1;
            LoopbackMode_REMOTELOOPBACK = 2;
         };
         LoopbackMode loopback_mode = 6 [json_name = "loopback-mode"];
         uint32 enable_transmission_delay = 7 [json_name = "enable-transmission-delay"];
         string last_up_time = 8 [json_name = "last-up-time"];
         string last_down_time = 9 [json_name = "last-down-time"];
         enum MediumType {
            MediumType_NOTSUPPORTED = 0;
            MediumType_COPPER = 1;
            MediumType_FIBER = 2;
         };
         MediumType medium_type = 10 [json_name = "medium-type"];
         bool optical_equipped = 11 [json_name = "optical-equipped"];
         uint64 physical_bandwidth = 12 [json_name = "physical-bandwidth"];
      }
      repeated Port port = 1 [json_name = "port"];
   }
   Ports ports = 9 [json_name = "ports"];
   message EntityClasses {
      message EntityClass {
         enum ClassName {
            ClassName_OTHER = 0;
            ClassName_CHASSIS = 1;
            ClassName_MPUMODULE = 4;
            ClassName_LPUMODULE = 5;
            ClassName_SFUMODULE = 6;
            ClassName_CLOCKMODULE = 7;
            ClassName_CARDMODULE = 9;
            ClassName_PORT = 10;
            ClassName_FAN = 16;
            ClassName_POWERSUPPLY = 17;
            ClassName_CONTAINER = 18;
            ClassName_PPMODULE = 4108;
            ClassName_SWFMODULE = 4109;
            ClassName_ECUMODULE = 4110;
            ClassName_ICUMODULE = 4111;
            ClassName_VLTPT = 4127;
            ClassName_TMPPT = 4128;
            ClassName_LFE = 4162;
            ClassName_CFMODULE = 4170;
            ClassName_LCD = 4181;
            ClassName_PEM = 5006;
            ClassName_CMUMODULE = 5010;
            ClassName_PIC = 5011;
            ClassName_TSU = 5012;
            ClassName_PMU = 5031;
            ClassName_PM = 5032;
         };
         ClassName class_name = 1 [json_name = "class-name"];
         bool is_resetable = 2 [json_name = "is-resetable"];
         bool is_switchoverable = 3 [json_name = "is-switchoverable"];
      }
      repeated EntityClass entity_class = 1 [json_name = "entity-class"];
   }
   EntityClasses entity_classes = 10 [json_name = "entity-classes"];
   message Offlines {
      message Offline {
         enum Class {
            Class_INVALID_ENUM_VALUE = 1;
            Class_CHASSIS = 1;
            Class_BOARD = 3;
            Class_CARD = 8;
         };
         Class class = 1 [json_name = "class"];
         string position = 2 [json_name = "position"];
      }
      repeated Offline offline = 1 [json_name = "offline"];
   }
   Offlines offlines = 11 [json_name = "offlines"];
   message ScheduleReboot {
      string datetime = 1 [json_name = "datetime"];
      string delay_time = 2 [json_name = "delay-time"];
   }
   ScheduleReboot schedule_reboot = 12 [json_name = "schedule-reboot"];
   message ActiveHardwareAlarmInfos {
      message ActiveHardwareAlarmInfo {
         uint32 sequence = 1 [json_name = "sequence"];
         string position = 2 [json_name = "position"];
         uint32 alarm_id = 3 [json_name = "alarm-id"];
         string level = 4 [json_name = "level"];
         string generated_time = 5 [json_name = "generated-time"];
         string info = 6 [json_name = "info"];
      }
      repeated ActiveHardwareAlarmInfo active_hardware_alarm_info = 1 [json_name = "active-hardware-alarm-info"];
   }
   ActiveHardwareAlarmInfos active_hardware_alarm_infos = 13 [json_name = "active-hardware-alarm-infos"];
   message HistoryHardwareAlarmInfos {
      message HistoryHardwareAlarmInfo {
         uint32 sequence = 1 [json_name = "sequence"];
         string position = 2 [json_name = "position"];
         uint32 alarm_id = 3 [json_name = "alarm-id"];
         string level = 4 [json_name = "level"];
         string generated_time = 5 [json_name = "generated-time"];
         string info = 6 [json_name = "info"];
      }
      repeated HistoryHardwareAlarmInfo history_hardware_alarm_info = 1 [json_name = "history-hardware-alarm-info"];
   }
   HistoryHardwareAlarmInfos history_hardware_alarm_infos = 14 [json_name = "history-hardware-alarm-infos"];
}

