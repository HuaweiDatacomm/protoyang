syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-30 15:09:49
// ProtoYang-version 1
// module huawei-aaa
// revision 2020-07-01
// revision 2020-06-17
// revision 2020-03-02
// namespace urn:huawei:yang:huawei-aaa

package huawei_aaa;

message Aaa {
   message Tasks {
      message Task {
         string name = 1 [json_name = "name"];
      }
      repeated Task task = 1 [json_name = "task"];
   }
   Tasks tasks = 1 [json_name = "tasks"];
   message TaskGroups {
      message TaskGroup {
         string name = 1 [json_name = "name"];
         message TaskGroupIncludeMaps {
            message TaskGroupIncludeMap {
               string include_task_group_name = 1 [json_name = "include-task-group-name"];
            }
            repeated TaskGroupIncludeMap task_group_include_map = 1 [json_name = "task-group-include-map"];
         }
         TaskGroupIncludeMaps task_group_include_maps = 2 [json_name = "task-group-include-maps"];
         message TaskGroupTaskMaps {
            message TaskGroupTaskMap {
               string task_name = 1 [json_name = "task-name"];
               enum Read {
                  Read_DISABLE = 0;
                  Read_ENABLE = 1;
               };
               Read read = 2 [json_name = "read"];
               enum Write {
                  Write_DISABLE = 0;
                  Write_ENABLE = 1;
               };
               Write write = 3 [json_name = "write"];
               enum Execute {
                  Execute_DISABLE = 0;
                  Execute_ENABLE = 1;
               };
               Execute execute = 4 [json_name = "execute"];
               enum Debug {
                  Debug_DISABLE = 0;
                  Debug_ENABLE = 1;
               };
               Debug debug = 5 [json_name = "debug"];
            }
            repeated TaskGroupTaskMap task_group_task_map = 1 [json_name = "task-group-task-map"];
         }
         TaskGroupTaskMaps task_group_task_maps = 3 [json_name = "task-group-task-maps"];
      }
      repeated TaskGroup task_group = 1 [json_name = "task-group"];
   }
   TaskGroups task_groups = 2 [json_name = "task-groups"];
   message UserGroups {
      message UserGroup {
         string name = 1 [json_name = "name"];
         message UserGroupTaskGroupMaps {
            message UserGroupTaskGroupMap {
               string task_group_name = 1 [json_name = "task-group-name"];
            }
            repeated UserGroupTaskGroupMap user_group_task_group_map = 1 [json_name = "user-group-task-group-map"];
         }
         UserGroupTaskGroupMaps user_group_task_group_maps = 2 [json_name = "user-group-task-group-maps"];
         message UserGroupIncludeMaps {
            message UserGroupIncludeMap {
               string include_user_group_name = 1 [json_name = "include-user-group-name"];
            }
            repeated UserGroupIncludeMap user_group_include_map = 1 [json_name = "user-group-include-map"];
         }
         UserGroupIncludeMaps user_group_include_maps = 3 [json_name = "user-group-include-maps"];
      }
      repeated UserGroup user_group = 1 [json_name = "user-group"];
   }
   UserGroups user_groups = 3 [json_name = "user-groups"];
   message AuthenticationSchemes {
      message AuthenticationScheme {
         string authen_scheme_name = 1 [json_name = "authen-scheme-name"];
         message AuthenModeType_OrderedStrictly {
            enum FirstAuthenMode {
               FirstAuthenMode_INVALID = 0;
               FirstAuthenMode_LOCAL = 1;
               FirstAuthenMode_HWTACACS = 2;
               FirstAuthenMode_RADIUS = 3;
               FirstAuthenMode_NONE = 4;
               FirstAuthenMode_RADIUSX_PROXY = 5;
            };
            FirstAuthenMode first_authen_mode = 1 [json_name = "first-authen-mode"];
            enum SecondAuthenMode {
               SecondAuthenMode_INVALID = 0;
               SecondAuthenMode_LOCAL = 1;
               SecondAuthenMode_HWTACACS = 2;
               SecondAuthenMode_RADIUS = 3;
               SecondAuthenMode_NONE = 4;
               SecondAuthenMode_RADIUSX_PROXY = 5;
            };
            SecondAuthenMode second_authen_mode = 2 [json_name = "second-authen-mode"];
            enum ThirdAuthenMode {
               ThirdAuthenMode_INVALID = 0;
               ThirdAuthenMode_LOCAL = 1;
               ThirdAuthenMode_HWTACACS = 2;
               ThirdAuthenMode_RADIUS = 3;
               ThirdAuthenMode_NONE = 4;
               ThirdAuthenMode_RADIUSX_PROXY = 5;
            };
            ThirdAuthenMode third_authen_mode = 3 [json_name = "third-authen-mode"];
            enum FourthAuthenMode {
               FourthAuthenMode_INVALID = 0;
               FourthAuthenMode_LOCAL = 1;
               FourthAuthenMode_HWTACACS = 2;
               FourthAuthenMode_RADIUS = 3;
               FourthAuthenMode_NONE = 4;
               FourthAuthenMode_RADIUSX_PROXY = 5;
            };
            FourthAuthenMode fourth_authen_mode = 4 [json_name = "fourth-authen-mode"];
         }
         oneof AuthenModeType {
            AuthenModeType_OrderedStrictly authen_mode_type_ordered_strictly = 2 [json_name = "ordered-strictly"];
         }
         enum IsAuthenChange {
            IsAuthenChange_NONE = 0;
            IsAuthenChange_HWTACACSX_LOCAL = 1;
         };
         IsAuthenChange is_authen_change = 3 [json_name = "is-authen-change"];
      }
      repeated AuthenticationScheme authentication_scheme = 1 [json_name = "authentication-scheme"];
   }
   AuthenticationSchemes authentication_schemes = 4 [json_name = "authentication-schemes"];
   message AuthorizationSchemes {
      message AuthorizationScheme {
         string author_scheme_name = 1 [json_name = "author-scheme-name"];
         message AuthorModeType_OrderedStrictly {
            enum FirstAuthorMode {
               FirstAuthorMode_INVALID = 0;
               FirstAuthorMode_LOCAL = 1;
               FirstAuthorMode_HWTACACS = 2;
               FirstAuthorMode_IFX_AUTHENTICATED = 3;
               FirstAuthorMode_NONE = 4;
            };
            FirstAuthorMode first_author_mode = 1 [json_name = "first-author-mode"];
            enum SecondAuthorMode {
               SecondAuthorMode_INVALID = 0;
               SecondAuthorMode_LOCAL = 1;
               SecondAuthorMode_HWTACACS = 2;
               SecondAuthorMode_IFX_AUTHENTICATED = 3;
               SecondAuthorMode_NONE = 4;
            };
            SecondAuthorMode second_author_mode = 2 [json_name = "second-author-mode"];
            enum ThirdAuthorMode {
               ThirdAuthorMode_INVALID = 0;
               ThirdAuthorMode_LOCAL = 1;
               ThirdAuthorMode_HWTACACS = 2;
               ThirdAuthorMode_IFX_AUTHENTICATED = 3;
               ThirdAuthorMode_NONE = 4;
            };
            ThirdAuthorMode third_author_mode = 3 [json_name = "third-author-mode"];
            enum FourthAuthorMode {
               FourthAuthorMode_INVALID = 0;
               FourthAuthorMode_LOCAL = 1;
               FourthAuthorMode_HWTACACS = 2;
               FourthAuthorMode_IFX_AUTHENTICATED = 3;
               FourthAuthorMode_NONE = 4;
            };
            FourthAuthorMode fourth_author_mode = 4 [json_name = "fourth-author-mode"];
         }
         oneof AuthorModeType {
            AuthorModeType_OrderedStrictly author_mode_type_ordered_strictly = 2 [json_name = "ordered-strictly"];
         }
         enum NoLvlFirstCmdAuthor {
            NoLvlFirstCmdAuthor_INVALID = 0;
            NoLvlFirstCmdAuthor_LOCAL = 1;
            NoLvlFirstCmdAuthor_HWTACACS = 2;
         };
         NoLvlFirstCmdAuthor no_lvl_first_cmd_author = 3 [json_name = "no-lvl-first-cmd-author"];
         enum NoLvlSecondCmdAuthor {
            NoLvlSecondCmdAuthor_INVALID = 0;
            NoLvlSecondCmdAuthor_LOCAL = 1;
            NoLvlSecondCmdAuthor_HWTACACS = 2;
         };
         NoLvlSecondCmdAuthor no_lvl_second_cmd_author = 4 [json_name = "no-lvl-second-cmd-author"];
         enum NoResponsePolicy {
            NoResponsePolicy_INVALID_ENUM_VALUE = 1;
            NoResponsePolicy_OFFLINE = 1;
            NoResponsePolicy_ONLINE = 2;
         };
         NoResponsePolicy no_response_policy = 5 [json_name = "no-response-policy"];
         uint32 no_response_times = 6 [json_name = "no-response-times"];
         message AuthorizationCmds {
            message AuthorizationCmd {
               uint32 level = 1 [json_name = "level"];
               message CmdAuthorModeType_OrderedStrictly {
                  enum FirstCmdAuthor {
                     FirstCmdAuthor_INVALID = 0;
                     FirstCmdAuthor_LOCAL = 1;
                     FirstCmdAuthor_HWTACACS = 2;
                  };
                  FirstCmdAuthor first_cmd_author = 1 [json_name = "first-cmd-author"];
                  enum SecondCmdAuthor {
                     SecondCmdAuthor_INVALID = 0;
                     SecondCmdAuthor_LOCAL = 1;
                     SecondCmdAuthor_HWTACACS = 2;
                  };
                  SecondCmdAuthor second_cmd_author = 2 [json_name = "second-cmd-author"];
               }
               oneof CmdAuthorModeType {
                  CmdAuthorModeType_OrderedStrictly cmd_author_mode_type_ordered_strictly = 2 [json_name = "ordered-strictly"];
               }
            }
            repeated AuthorizationCmd authorization_cmd = 1 [json_name = "authorization-cmd"];
         }
         AuthorizationCmds authorization_cmds = 7 [json_name = "authorization-cmds"];
      }
      repeated AuthorizationScheme authorization_scheme = 1 [json_name = "authorization-scheme"];
   }
   AuthorizationSchemes authorization_schemes = 5 [json_name = "authorization-schemes"];
   message AccountingSchemes {
      message AccountingScheme {
         string acct_scheme_name = 1 [json_name = "acct-scheme-name"];
         enum AccountingMode {
            AccountingMode_INVALID = 0;
            AccountingMode_RADIUS = 1;
            AccountingMode_HWTACACS = 2;
            AccountingMode_NONE = 3;
         };
         AccountingMode accounting_mode = 2 [json_name = "accounting-mode"];
      }
      repeated AccountingScheme accounting_scheme = 1 [json_name = "accounting-scheme"];
   }
   AccountingSchemes accounting_schemes = 6 [json_name = "accounting-schemes"];
   message Domains {
      message Domain {
         string name = 1 [json_name = "name"];
         uint32 admin_level = 2 [json_name = "admin-level"];
         string authen_scheme_name = 3 [json_name = "authen-scheme-name"];
         string author_scheme_name = 4 [json_name = "author-scheme-name"];
         string acct_scheme_name = 5 [json_name = "acct-scheme-name"];
         int32 access_limit = 6 [json_name = "access-limit"];
         string radius_server_template = 7 [json_name = "radius-server-template"];
         string hwtacacs_server_template = 8 [json_name = "hwtacacs-server-template"];
         enum State {
            State_BLOCK = 0;
            State_ACTIVE = 1;
         };
         State state = 9 [json_name = "state"];
         bool time_range_enable = 10 [json_name = "time-range-enable"];
         bool service_terminal = 11 [json_name = "service-terminal"];
         bool service_telnet = 12 [json_name = "service-telnet"];
         bool service_ftp = 13 [json_name = "service-ftp"];
         bool service_ppp = 14 [json_name = "service-ppp"];
         bool service_ssh = 15 [json_name = "service-ssh"];
         bool service_qx = 16 [json_name = "service-qx"];
         bool service_snmp = 17 [json_name = "service-snmp"];
         bool service_mml = 18 [json_name = "service-mml"];
         bool service_http = 19 [json_name = "service-http"];
         int32 online_num = 20 [json_name = "online-num"];
      }
      repeated Domain domain = 1 [json_name = "domain"];
   }
   Domains domains = 7 [json_name = "domains"];
   message LoginAlarmThreshold {
      uint32 report_times = 1 [json_name = "report-times"];
      uint32 resume_times = 2 [json_name = "resume-times"];
      uint32 period = 3 [json_name = "period"];
   }
   LoginAlarmThreshold login_alarm_threshold = 8 [json_name = "login-alarm-threshold"];
   message AliveUserQrys {
      message AliveUserQry {
         uint32 user_id = 1 [json_name = "user-id"];
         string user_name = 2 [json_name = "user-name"];
         uint32 level = 3 [json_name = "level"];
         string user_group_name = 4 [json_name = "user-group-name"];
         string name = 5 [json_name = "name"];
         enum AccessType {
            AccessType_INVALID = 0;
            AccessType_TERMINAL = 1;
            AccessType_TELNET = 2;
            AccessType_FTP = 3;
            AccessType_PPP = 4;
            AccessType_SSH = 5;
            AccessType_QX = 6;
            AccessType_SNMP = 7;
            AccessType_HTTP = 8;
            AccessType_MML = 9;
         };
         AccessType access_type = 6 [json_name = "access-type"];
         enum AuthenType {
            AuthenType_INVALID_ENUM_VALUE = 1;
            AuthenType_ADMIN = 1;
         };
         AuthenType authen_type = 7 [json_name = "authen-type"];
         enum AuthenMethod {
            AuthenMethod_INVALID = 0;
            AuthenMethod_LOCAL = 1;
            AuthenMethod_HWTACACS = 2;
            AuthenMethod_RADIUS = 3;
            AuthenMethod_NONE = 4;
            AuthenMethod_RADIUSX_PROXY = 5;
         };
         AuthenMethod authen_method = 8 [json_name = "authen-method"];
         enum AuthenState {
            AuthenState_IDLE = 0;
            AuthenState_AUTHENTICATING = 1;
            AuthenState_SUCCESS = 2;
            AuthenState_FAILED = 3;
         };
         AuthenState authen_state = 9 [json_name = "authen-state"];
         enum AuthorMethod {
            AuthorMethod_INVALID = 0;
            AuthorMethod_LOCAL = 1;
            AuthorMethod_HWTACACS = 2;
            AuthorMethod_IFX_AUTHENTICATED = 3;
            AuthorMethod_NONE = 4;
         };
         AuthorMethod author_method = 10 [json_name = "author-method"];
         enum AuthorState {
            AuthorState_IDLE = 0;
            AuthorState_AUTHORING = 1;
            AuthorState_SUCCESS = 2;
            AuthorState_FAILED = 3;
         };
         AuthorState author_state = 11 [json_name = "author-state"];
         enum AcctMethod {
            AcctMethod_INVALID = 0;
            AcctMethod_RADIUS = 1;
            AcctMethod_HWTACACS = 2;
            AcctMethod_NONE = 3;
         };
         AcctMethod acct_method = 12 [json_name = "acct-method"];
         enum AcctState {
            AcctState_STARTIDLE = 0;
            AcctState_STARTWAIT = 1;
            AcctState_ACCOUNTING = 2;
            AcctState_STARTFAILED = 3;
            AcctState_STOPIDLE = 4;
            AcctState_STOPWAIT = 5;
            AcctState_FINISHED = 6;
            AcctState_FAILED = 7;
         };
         AcctState acct_state = 13 [json_name = "acct-state"];
      }
      repeated AliveUserQry alive_user_qry = 1 [json_name = "alive-user-qry"];
   }
   AliveUserQrys alive_user_qrys = 9 [json_name = "alive-user-qrys"];
   message GlobalPolicy {
      enum DomainLocation {
         DomainLocation_AFTERX_DELIMITER = 0;
         DomainLocation_BEFOREX_DELIMITER = 1;
      };
      DomainLocation domain_location = 1 [json_name = "domain-location"];
      enum DomainParseDirection {
         DomainParseDirection_LEFTX_TOX_RIGHT = 0;
         DomainParseDirection_RIGHTX_TOX_LEFT = 1;
      };
      DomainParseDirection domain_parse_direction = 2 [json_name = "domain-parse-direction"];
      string default_admin_domain = 3 [json_name = "default-admin-domain"];
      string default_access_domain = 4 [json_name = "default-access-domain"];
      enum ParsePriority {
         ParsePriority_INVALID_ENUM_VALUE = 1;
         ParsePriority_DOMAINX_FIRST = 1;
         ParsePriority_REALMX_FIRST = 2;
      };
      ParsePriority parse_priority = 5 [json_name = "parse-priority"];
      enum RealmLocation {
         RealmLocation_AFTERX_DELIMITER = 0;
         RealmLocation_BEFOREX_DELIMITER = 1;
      };
      RealmLocation realm_location = 6 [json_name = "realm-location"];
      string real_name_delimiter = 7 [json_name = "real-name-delimiter"];
      enum RealNameParseDirection {
         RealNameParseDirection_LEFTX_TOX_RIGHT = 0;
         RealNameParseDirection_RIGHTX_TOX_LEFT = 1;
      };
      RealNameParseDirection real_name_parse_direction = 8 [json_name = "real-name-parse-direction"];
      string roam_character = 9 [json_name = "roam-character"];
   }
   GlobalPolicy global_policy = 10 [json_name = "global-policy"];
   message Recording {
      message Function {
         string cmd_record_scheme = 1 [json_name = "cmd-record-scheme"];
         string system_record_scheme = 2 [json_name = "system-record-scheme"];
         string outbound_record_scheme = 3 [json_name = "outbound-record-scheme"];
      }
      Function function = 1 [json_name = "function"];
      message Schemes {
         message Scheme {
            string name = 1 [json_name = "name"];
            string tacacs_group = 2 [json_name = "tacacs-group"];
         }
         repeated Scheme scheme = 1 [json_name = "scheme"];
      }
      Schemes schemes = 2 [json_name = "schemes"];
   }
   Recording recording = 11 [json_name = "recording"];
   message OnlineOfflineRecSwitch {
      enum LoginFailRecSwitch {
         LoginFailRecSwitch_DISABLE = 0;
         LoginFailRecSwitch_ENABLE = 1;
      };
      LoginFailRecSwitch login_fail_rec_switch = 1 [json_name = "login-fail-rec-switch"];
      enum LogoutRecSwitch {
         LogoutRecSwitch_DISABLE = 0;
         LogoutRecSwitch_ENABLE = 1;
      };
      LogoutRecSwitch logout_rec_switch = 2 [json_name = "logout-rec-switch"];
      enum AbnormalLogoutRecSwitch {
         AbnormalLogoutRecSwitch_DISABLE = 0;
         AbnormalLogoutRecSwitch_ENABLE = 1;
      };
      AbnormalLogoutRecSwitch abnormal_logout_rec_switch = 3 [json_name = "abnormal-logout-rec-switch"];
      enum NormalLogoutRecSwitch {
         NormalLogoutRecSwitch_DISABLE = 0;
         NormalLogoutRecSwitch_ENABLE = 1;
      };
      NormalLogoutRecSwitch normal_logout_rec_switch = 4 [json_name = "normal-logout-rec-switch"];
   }
   OnlineOfflineRecSwitch online_offline_rec_switch = 12 [json_name = "online-offline-rec-switch"];
   message AbnormalOfflineHidens {
      message AbnormalOfflineHiden {
         uint32 hidden_id = 1 [json_name = "hidden-id"];
      }
      repeated AbnormalOfflineHiden abnormal_offline_hiden = 1 [json_name = "abnormal-offline-hiden"];
   }
   AbnormalOfflineHidens abnormal_offline_hidens = 13 [json_name = "abnormal-offline-hidens"];
   message Lam {
      message LoginFailedLimit {
         uint32 failed_times = 1 [json_name = "failed-times"];
         uint32 period = 2 [json_name = "period"];
         uint32 reactive_time = 3 [json_name = "reactive-time"];
      }
      LoginFailedLimit login_failed_limit = 1 [json_name = "login-failed-limit"];
      message UserSecurityPolicy {
         bool security_policy = 1 [json_name = "security-policy"];
         uint32 user_aging_period = 2 [json_name = "user-aging-period"];
         uint32 user_name_min_len = 3 [json_name = "user-name-min-len"];
      }
      UserSecurityPolicy user_security_policy = 2 [json_name = "user-security-policy"];
      message PasswordPolicy {
         uint32 expire_days = 1 [json_name = "expire-days"];
         uint32 prompt_days = 2 [json_name = "prompt-days"];
         bool change_check = 3 [json_name = "change-check"];
         bool complexity_check = 4 [json_name = "complexity-check"];
         uint32 pwd_min_length = 5 [json_name = "pwd-min-length"];
         uint32 history_pwd_num = 6 [json_name = "history-pwd-num"];
      }
      PasswordPolicy password_policy = 3 [json_name = "password-policy"];
      message ForbiddenWordRules {
         message ForbiddenWordRule {
            string forbidden_word = 1 [json_name = "forbidden-word"];
         }
         repeated ForbiddenWordRule forbidden_word_rule = 1 [json_name = "forbidden-word-rule"];
      }
      ForbiddenWordRules forbidden_word_rules = 4 [json_name = "forbidden-word-rules"];
      message Users {
         message User {
            string name = 1 [json_name = "name"];
            string end_life_date = 2 [json_name = "end-life-date"];
            bool is_login_anytime = 3 [json_name = "is-login-anytime"];
            enum BeginLoginDay {
               BeginLoginDay_SUN = 0;
               BeginLoginDay_MON = 1;
               BeginLoginDay_TUE = 2;
               BeginLoginDay_WED = 3;
               BeginLoginDay_THU = 4;
               BeginLoginDay_FRI = 5;
               BeginLoginDay_SAT = 6;
            };
            BeginLoginDay begin_login_day = 4 [json_name = "begin-login-day"];
            enum EndLoginDay {
               EndLoginDay_SUN = 0;
               EndLoginDay_MON = 1;
               EndLoginDay_TUE = 2;
               EndLoginDay_WED = 3;
               EndLoginDay_THU = 4;
               EndLoginDay_FRI = 5;
               EndLoginDay_SAT = 6;
            };
            EndLoginDay end_login_day = 5 [json_name = "end-login-day"];
            string begin_login_time = 6 [json_name = "begin-login-time"];
            string end_login_time = 7 [json_name = "end-login-time"];
            uint32 aging_in_days = 8 [json_name = "aging-in-days"];
            uint32 password_expire_in_days = 9 [json_name = "password-expire-in-days"];
            string group_name = 10 [json_name = "group-name"];
            enum State {
               State_BLOCK = 0;
               State_ACTIVE = 1;
            };
            State state = 11 [json_name = "state"];
            uint32 failed_times = 12 [json_name = "failed-times"];
            uint32 interval = 13 [json_name = "interval"];
            enum PasswordType {
               PasswordType_INVALID_ENUM_VALUE = 1;
               PasswordType_CIPHER = 1;
               PasswordType_IRREVERSIBLEX_CIPHER = 2;
            };
            PasswordType password_type = 14 [json_name = "password-type"];
            string password = 15 [json_name = "password"];
            uint32 level = 16 [json_name = "level"];
            string ftp_dir = 17 [json_name = "ftp-dir"];
            bool service_terminal = 18 [json_name = "service-terminal"];
            bool service_telnet = 19 [json_name = "service-telnet"];
            bool service_ftp = 20 [json_name = "service-ftp"];
            bool service_ppp = 21 [json_name = "service-ppp"];
            bool service_ssh = 22 [json_name = "service-ssh"];
            bool service_qx = 23 [json_name = "service-qx"];
            bool service_snmp = 24 [json_name = "service-snmp"];
            bool service_mml = 25 [json_name = "service-mml"];
            bool service_http = 26 [json_name = "service-http"];
            int32 max_access_num = 27 [json_name = "max-access-num"];
            bool idle_cut_enable = 28 [json_name = "idle-cut-enable"];
            string begin_life_date = 29 [json_name = "begin-life-date"];
            string last_login_time = 30 [json_name = "last-login-time"];
            enum IsAged {
               IsAged_NOCONFIG = 0;
               IsAged_NO = 1;
               IsAged_YES = 2;
            };
            IsAged is_aged = 31 [json_name = "is-aged"];
            enum IsLocked {
               IsLocked_NOCONFIG = 0;
               IsLocked_NO = 1;
               IsLocked_YES = 2;
            };
            IsLocked is_locked = 32 [json_name = "is-locked"];
            uint32 left_lock_time = 33 [json_name = "left-lock-time"];
            enum IsTerminalLocked {
               IsTerminalLocked_NOCONFIG = 0;
               IsTerminalLocked_NO = 1;
               IsTerminalLocked_YES = 2;
            };
            IsTerminalLocked is_terminal_locked = 34 [json_name = "is-terminal-locked"];
            uint32 terminal_left_lock_time = 35 [json_name = "terminal-left-lock-time"];
            string pass_modify_time = 36 [json_name = "pass-modify-time"];
            enum IsPassExpired {
               IsPassExpired_NOCONFIG = 0;
               IsPassExpired_UNEXPIRED = 1;
               IsPassExpired_EXPIRED = 2;
            };
            IsPassExpired is_pass_expired = 37 [json_name = "is-pass-expired"];
            bool is_pass_changed = 38 [json_name = "is-pass-changed"];
            int32 alive_num = 39 [json_name = "alive-num"];
         }
         repeated User user = 1 [json_name = "user"];
      }
      Users users = 5 [json_name = "users"];
   }
   Lam lam = 14 [json_name = "lam"];
   message LocalServer {
      message LoginFailedLimit {
         uint32 failed_times = 1 [json_name = "failed-times"];
         uint32 period = 2 [json_name = "period"];
         uint32 reactive_time = 3 [json_name = "reactive-time"];
      }
      LoginFailedLimit login_failed_limit = 1 [json_name = "login-failed-limit"];
      message UserSecurityPolicy {
         uint32 user_aging_period = 1 [json_name = "user-aging-period"];
         uint32 user_name_min_len = 2 [json_name = "user-name-min-len"];
      }
      UserSecurityPolicy user_security_policy = 2 [json_name = "user-security-policy"];
      message PasswordPolicy {
         uint32 expire_days = 1 [json_name = "expire-days"];
         uint32 prompt_days = 2 [json_name = "prompt-days"];
         bool change_check = 3 [json_name = "change-check"];
         bool complexity_check = 4 [json_name = "complexity-check"];
         uint32 pwd_min_length = 5 [json_name = "pwd-min-length"];
      }
      PasswordPolicy password_policy = 3 [json_name = "password-policy"];
   }
   LocalServer local_server = 15 [json_name = "local-server"];
}

